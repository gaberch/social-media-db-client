DROP DATABASE IF EXISTS SocialMediaDB;
CREATE DATABASE SocialMediaDB;
USE SocialMediaDB;



-- DROP TABLE IF EXISTS SubTopicMapping;
-- DROP TABLE IF EXISTS PostTopicMapping;
-- DROP TABLE IF EXISTS TopicFollowing;
-- DROP TABLE IF EXISTS Topic;
-- DROP TABLE IF EXISTS Reaction;
-- DROP TABLE IF EXISTS Seen;
-- DROP TABLE IF EXISTS Post;
-- DROP TABLE IF EXISTS UserFollowing;
-- DROP TABLE IF EXISTS UserGroupMapping;
-- DROP TABLE IF EXISTS Club;
-- DROP TABLE IF EXISTS User;



CREATE TABLE User(
	userID INT NOT NULL,
	username VARCHAR(32) NOT NULL,
	birthDate DATE DEFAULT NULL,
	gender VARCHAR(32) DEFAULT NULL,
	vocation VARCHAR(64) DEFAULT NULL,
	religion VARCHAR(32) DEFAULT NULL,
	PRIMARY KEY (userID)
);


CREATE TABLE Club(
	groupID INT NOT NULL,
	groupName VARCHAR(32) NOT NULL,
	PRIMARY KEY (groupID)
);


CREATE TABLE UserGroupMapping(
	userID INT NOT NULL,
	groupID INT NOT NULL,
	PRIMARY KEY (userID, groupID),
	FOREIGN KEY (userID) REFERENCES User(userID) ON DELETE CASCADE,
	FOREIGN KEY (groupID) REFERENCES Club(groupID) ON DELETE CASCADE
);


CREATE TABLE UserFollowing(
	followerID INT NOT NULL,
	followedID INT NOT NULL,
	PRIMARY KEY (followerID, followedID),
	FOREIGN KEY (followerID) REFERENCES User(userID) ON DELETE CASCADE,
	FOREIGN KEY (followedID) REFERENCES User(userID) ON DELETE CASCADE
);


CREATE TABLE Post(
	postID INT NOT NULL,
	authorID INT DEFAULT NULL,
	inResponseToPostID INT DEFAULT NULL,
	creationTimeStamp DATETIME DEFAULT NULL,
	textContent TEXT DEFAULT NULL,
	imageContent LONGBLOB DEFAULT NULL,
	linkContent VARCHAR(256) DEFAULT NULL,
	PRIMARY KEY (postID),
	FOREIGN KEY (authorID) REFERENCES User(userID) ON DELETE SET NULL,
	FOREIGN KEY (inResponseToPostID) REFERENCES Post(postID) ON DELETE SET NULL
);


CREATE TABLE Seen(
	userID INT NOT NULL,
	postID INT NOT NULL,
	PRIMARY KEY (userID, postID),
	FOREIGN KEY (userID) REFERENCES User(userID) ON DELETE CASCADE,
	FOREIGN KEY (postID) REFERENCES Post(postID) ON DELETE CASCADE
);


CREATE TABLE Reaction(
	userID INT NOT NULL,
	postID INT NOT NULL,
	type VARCHAR(32) NOT NULL,
	PRIMARY KEY (userID, postID),
	FOREIGN KEY (userID) REFERENCES User(userID) ON DELETE CASCADE,
	FOREIGN KEY (postID) REFERENCES Post(postID) ON DELETE CASCADE	
);


CREATE TABLE Topic(
	topicName VARCHAR(64) NOT NULL,
	PRIMARY KEY (topicName)
);


CREATE TABLE TopicFollowing(
	userID INT NOT NULL,
	topicName VARCHAR(64) NOT NULL,
	PRIMARY KEY (userID, topicName),
	FOREIGN KEY (userID) REFERENCES User(userID) ON DELETE CASCADE,
	FOREIGN KEY (topicName) REFERENCES Topic(topicName) ON DELETE CASCADE	
);


CREATE TABLE PostTopicMapping(
	postID INT NOT NULL,
	topicName VARCHAR(64) NOT NULL,
	PRIMARY KEY (postID, topicName),
	FOREIGN KEY (postID) REFERENCES Post(postID) ON DELETE CASCADE,
	FOREIGN KEY (topicName) REFERENCES Topic(topicName) ON DELETE CASCADE
);


CREATE TABLE SubTopicMapping(
	topicName VARCHAR(64) NOT NULL,
	subTopicName VARCHAR(64) NOT NULL,
	PRIMARY KEY (topicName, subTopicName),
	FOREIGN KEY (topicName) REFERENCES Topic(topicName) ON DELETE CASCADE,
	FOREIGN KEY (subTopicName) REFERENCES Topic(topicName) ON DELETE CASCADE	
);
